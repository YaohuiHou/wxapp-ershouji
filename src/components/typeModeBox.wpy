<template>
  <view class="view" hidden="{{!typeMode}}">
    <view class="type">
      <view class="head">选择机型</view>
      <scroll-view scroll-y class="scroll-view">
        <text class="h4">全部机型</text>
        <view class="content">
          <block wx:for="{{typeModeList}}" wx:key="{{index}}">
            <text class="parent" @tap="parentSelect({{item}})">{{item.name}}</text>
            <view class="children" wx:if="{{item.select}}">
              <!-- <text class="selected">履带式挖掘机</text> -->
              <text
                wx:for="{{item.childrens}}"
                wx:key="{{index}}"
                class="{{item.select ? 'selected' : ''}}"
                @tap="changeItem({{item}})"
              >{{item.name}}</text>
            </view>
          </block>
        </view>
      </scroll-view>
    </view>
    <view class="mask" @tap="toastMask"></view>
  </view>
</template>

<script>
import wepy from 'wepy'
import mixin from '../mixins'
export default class typeMode extends wepy.component {
  props = {
    typeMode: {
      type: Boolean,
      default: false,
      twoWay: true
    },
    submitData: {
      type: Object,
      twoWay: true
    },
    typeModeData: {
      twoWay: true
    }
  }
  data = {
    // 所有数据
    typeModeList: {},
    // 之前选中的信息
    startSelectItem: null
  }
  mixins = [mixin]

  methods = {
    // 关闭
    toastMask() {
      this.typeMode = false
      this.$apply()
    },
    // 展开
    parentSelect(item) {
      this.typeModeList[item.id].select = !this.typeModeList[item.id].select
    },
    // 选中
    changeItem(item) {
      wx.showLoading({
        title: '数据加载中...'
      })
      this.typeModeList[item.categoryId].childrens.forEach(ele => {
        if (ele.id === item.id) {
          ele.select = true
        }
      })
      // 判断之前数据
      if (this.startSelectItem) {
        this.typeModeList[this.startSelectItem.categoryId].childrens.forEach(
          ele => {
            if (ele.id == this.startSelectItem.id) {
              ele.select = false
            }
          }
        )
      }
      // 将选中数据存储
      this.startSelectItem = item
      this.typeMode = false
      this.submitData.categoryId = item.categoryId
      this.submitData.secondCategoryId = item.id
      this.typeModeData = item
      this.$apply()
      this.$emit('delete', null)
    }
  }
  onLoad() {
    this.$nextTick(() => {
      wx.getStorageInfo({
        success: res => {
          let storage = res.keys
          if (storage.indexOf('typeModeList') != -1) {
            wx.getStorage({
              key: 'typeModeList',
              success: res => {
                this.typeModeList = JSON.parse(res.data)
              }
            })
          } else {
            this.getTypeModeList()
          }
        }
      })
    })
  }

  // 获取数据
  getTypeModeList() {
    wepy
      .request({
        url: `${this.host}wx/getCategoryList`,
        data: {
          callback: 1,
          brandId: this.submitData.brandId
        }
      })
      .then(res => {
        let data = JSON.parse(res.data.substring(2, res.data.length - 1))
        if (data.ret == 0) {
          let arr = data.result
          let newArr = {}
          arr.forEach((ele, index) => {
            if (ele.categoryId < 0) {
              newArr[ele.id] = ele
            } else {
              if (!newArr[ele.categoryId].childrens) {
                newArr[ele.categoryId].childrens = []
              }
              newArr[ele.categoryId].childrens = [
                ...newArr[ele.categoryId].childrens,
                ele
              ]
            }
          })
          this.typeModeList = newArr
          wx.setStorage({
            key: 'typeModeList',
            data: JSON.stringify(this.typeModeList)
          })
          this.$apply()
        }
      })
  }

  // 筛选
  changeItemSelectFun() {
    // 判断之前数据
    if (this.startSelectItem) {
      this.typeModeList[this.startSelectItem.categoryId].childrens.forEach(
        ele => {
          if (ele.id == this.startSelectItem.id) {
            ele.select = false
          }
        }
      )
    }
  }
}
</script>

<style lang="less" scoped>
.view {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
  .mask {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
  }
  .type {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    width: 590rpx;
    height: 100%;
    box-sizing: border-box;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background: #fff;
    z-index: 1;
    .head {
      font-size: 34rpx;
      color: #353535;
      height: 86rpx;
      line-height: 86rpx;
      text-align: center;
      font-weight: 500;
    }
    .scroll-view {
      height: calc(~'100vh - 86rpx');
      .h4 {
        font-size: 30rpx;
        color: #353535;
        background: #efeff4;
        height: 68rpx;
        line-height: 68rpx;
        padding-left: 30rpx;
        display: block;
      }
      .content {
        background-color: #fff;
        display: flex;
        flex-direction: column;
        text {
          display: block;
          font-size: 28rpx;
          color: #353535;
          height: 100rpx;
          line-height: 100rpx;
          padding-left: 62rpx;
          &.parent {
            position: relative;
            &:after {
              content: '';
              position: absolute;
              right: 0;
              bottom: 0;
              width: calc(~'100% - 62rpx');
              height: 1rpx;
              background-color: #e5e5e5;
            }
          }
        }
        .children {
          background: #f9f9f9;
          padding-left: 120rpx;
          text {
            color: #4a4a53;
            border-bottom: 1rpx solid rgba(220, 226, 238, 0.6);
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            padding-left: 0;
            &.selected {
              color: #486cdc;
              font-weight: 600;
              &:after {
                content: '\e607';
                display: block;
                margin-right: 56rpx;
                font-size: 26rpx;
                line-height: 26rpx;
                color: #486cdc;
                font-family: 'TieJia';
                font-weight: 300;
              }
            }
          }
        }
      }
    }
  }
}
</style>
