<template>
  <view class="view" hidden="{{!chooseShow}}">
    <view class="choose">
      <view class="head">筛选</view>
      <scroll-view scroll-y class="scroll-view">
        <block wx:for="{{typeList}}" wx:key="{{index}}" wx:if="{{item}}">
          <text class="h4">{{item.name}}</text>
          <view class="content">
            <text
              wx:for="{{item.list}}"
              wx:key="{{index}}"
              class="{{item.select ? 'selected' : ''}}"
              @tap="selectedFun({{item}})"
            >{{item.name}}</text>
          </view>
        </block>
      </scroll-view>
      <view class="footer">
        <text class="reset" @tap="resetFun">重置</text>
        <text class="submit" @tap="submitFun">确定</text>
      </view>
    </view>
    <view class="mask" @tap="toastMask"></view>
  </view>
</template>

<script>
import wepy from 'wepy'
import mixin from '../mixins'
export default class choose extends wepy.component {
  props = {
    chooseShow: {
      type: Boolean,
      default: false,
      twoWay: true
    },
    submitData: {
      type: Object,
      twoWay: true
    },
    newSelect: {
      twoWay: true
    }
  }
  data = {
    tonnage: {
      name: '吨位',
      list: [
        {
          selectType: 'tonnageId',
          index: 4,
          select: false,
          name: '6以下',
          id: '1'
        },
        {
          selectType: 'tonnageId',
          index: 4,
          select: false,
          name: '6(含)-9(含)',
          id: '2'
        },
        {
          selectType: 'tonnageId',
          index: 4,
          select: false,
          name: '10(含)-19(含)',
          id: '3'
        },
        {
          selectType: 'tonnageId',
          index: 4,
          select: false,
          name: '20(含)-29(含)',
          id: '4'
        },
        {
          selectType: 'tonnageId',
          index: 4,
          select: false,
          name: '30及以上',
          id: '5'
        }
      ]
    },
    typeList: [],
    getTypeList: [],
    type: [
      {
        name: '价格',
        list: [
          {
            selectType: 'priceId',
            index: 0,
            select: false,
            name: '0-10万',
            id: '1'
          },
          {
            selectType: 'priceId',
            index: 0,
            select: false,
            name: '10(含)-20万',
            id: '21'
          },
          {
            selectType: 'priceId',
            index: 0,
            select: false,
            name: '20(含)-30万',
            id: '22'
          },
          {
            selectType: 'priceId',
            index: 0,
            select: false,
            name: '30(含)-50万',
            id: '3'
          },
          {
            selectType: 'priceId',
            index: 0,
            select: false,
            name: '50万及以上',
            id: '41'
          }
        ]
      },
      {
        name: '使用小时数',
        list: [
          {
            selectType: 'hourId',
            index: 1,
            select: false,
            name: '2000以内',
            id: '1'
          },
          {
            selectType: 'hourId',
            index: 1,
            select: false,
            name: '2000(含)-5000',
            id: '2'
          },
          {
            selectType: 'hourId',
            index: 1,
            select: false,
            name: '5000(含)-8000',
            id: '3'
          },
          {
            selectType: 'hourId',
            index: 1,
            select: false,
            name: '8000以上',
            id: '4'
          }
        ]
      },
      {
        name: '出厂年限',
        list: [
          {
            selectType: 'yearId',
            index: 2,
            select: false,
            name: '1年以下',
            id: '1'
          },
          {
            selectType: 'yearId',
            index: 2,
            select: false,
            name: '1年(含)-2年',
            id: '2'
          },
          {
            selectType: 'yearId',
            index: 2,
            select: false,
            name: '2年(含)-3年',
            id: '3'
          },
          {
            selectType: 'yearId',
            index: 2,
            select: false,
            name: '3年及以上',
            id: '4'
          }
        ]
      }
    ],
    // 筛选排序
    chooseSelecteds: {
      1: 'priceId',
      2: 'hourId',
      3: 'yearId',
      5: 'tonnage',
      6: 'yearId',
      7: 'armLengthId',
      8: 'priceId',
      9: 'tonnageId',
      10: 'pressureId',
      11: 'productionId',
      12: 'powerId',
      13: 'distributingId',
      14: 'loadingCapacityId',
      15: 'none'
    },
    newModelId: '',
    oldModelId: '0'
  }
  mixins = [mixin]
  watch = {
    // 通过二级机型参数判断展示内容
    chooseShow(newVal, oldVal) {
      if (this.newModelId == this.oldModelId) return
      if (newVal) {
        this.typeList = this.type
        switch (this.submitData.secondCategoryId) {
          case 116:
          case 55:
          case 58:
          case 90:
          case 105:
          case 106:
          case 108:
            this.getFilterList()
            break
          case 4:
          case 5:
          case 19:
          case 163:
            this.typeList[4] = this.tonnage
            break
        }
      }
      this.$apply()
    },
    submitData(n, o) {
      this.newModelId = n.secondCategoryId
      this.oldModelId = o.secondCategoryId
      this.$apply()
    }
  }
  methods = {
    // 关闭
    toastMask() {
      this.chooseShow = false
      this.$apply()
    },
    // 选中
    selectedFun(item) {
      let arr = this.typeList[item.index].list
      arr.forEach(ele => {
        ele.select = false
        if (ele.id == item.id) {
          ele.select = !item.select
          this.$apply()
        }
      })
    },
    // 重置
    resetFun(type) {
      this.typeList.forEach(element => {
        element.list.forEach(ele => {
          if (type) {
            // 指定项去掉
            if (ele.selectType == type) {
              if (ele.select && this.newSelect[type]) {
                this.submitData[ele.selectType] = ''
                delete this.newSelect[type]
              }
              ele.select = false
            }
          } else {
            // 全部去除
            if (ele.select) {
              this.submitData[ele.selectType] = ''
              delete this.newSelect[ele.selectType]
            }
            ele.select = false
          }
        })
      })
      this.$apply()
    },
    // 确定
    async submitFun() {
      var n = 2
      wx.showLoading({
        title: '数据加载中...'
      })
      this.chooseType = []
      // 清空
      for (const key in this.chooseSelecteds) {
        let me = this.chooseSelecteds[key]
        if (me != 'none') {
          this.submitData[me] = ''
        }
      }

      this.typeList.forEach(element => {
        delete this.newSelect[element.list[0].selectType]
        element.list.forEach(ele => {
          if (ele.select) {
            this.chooseType.push(ele)
            // 判断底盘
            if (ele.selectType != 'none') {
              this.submitData[ele.selectType] = ele.id
            } else {
              n = 3
            }
            this.newSelect[ele.selectType] = ele
          }
        })
      })
      this.chooseShow = false
      this.$apply()
      // await this.$emit('delete', 1)
      await this.$emit('getList', n)
    }
  }
  // 获取筛选条件
  getFilterList() {
    console.log(11)

    wepy
      .request({
        url: `${this.host}wx/getFilterList`,
        data: {
          callback: 1,
          secondCategoryId: this.submitData.secondCategoryId
            ? this.submitData.secondCategoryId
            : ''
        }
      })
      .then(res => {
        let data = JSON.parse(res.data.substring(2, res.data.length - 1))
        if (data.ret == 0) {
          let arr = data.result
          // 转化
          arr.forEach((element, index) => {
            let list = []
            let thisIndex = element.typeId - 1

            element.filterDictList.forEach((ele, i) => {
              list[i] = {
                selectType: this.chooseSelecteds[element.typeId],
                index: thisIndex,
                select: false,
                name: ele.filterName,
                id: ele.typeId.split('_')[1]
              }
            })

            this.getTypeList[thisIndex] = {
              name: element.filterName,
              list: list
            }
          })
          this.typeList = this.getTypeList

          this.$apply()
        }
      })
  }
}
</script>

<style lang="less" scoped>
.view {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
  .mask {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
  }
  .choose {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    width: 590rpx;
    height: 100%;
    box-sizing: border-box;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background: #fff;
    z-index: 1;
    .head {
      font-size: 34rpx;
      color: #353535;
      height: 86rpx;
      line-height: 86rpx;
      text-align: center;
      font-weight: 500;
    }
    .scroll-view {
      height: calc(~'100vh - 176rpx');
      .h4 {
        font-size: 30rpx;
        color: #353535;
        background: #efeff4;
        height: 68rpx;
        line-height: 68rpx;
        padding-left: 30rpx;
        display: block;
      }
      .content {
        padding: 40rpx 30rpx 10rpx;
        background-color: #fff;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        text {
          display: block;
          font-size: 28rpx;
          color: #353535;
          text-align: center;
          padding: 0 20rpx;
          margin-right: 24rpx;
          margin-bottom: 30rpx;
          border: 1rpx solid #e5e5e5;
          border-radius: 4rpx;
          height: 60rpx;
          line-height: 60rpx;
          transition: background 0.5s linear;
          &.selected {
            color: #fff;
            background: #486cdc;
          }
        }
      }
    }
    .footer {
      height: 90rpx;
      display: flex;
      flex-direction: row;
      border-top: 1rpx solid #e5e5e5;
      flex-wrap: wrap;
      text {
        font-size: 34rpx;
        line-height: 90rpx;
        text-align: center;
        &.reset {
          background-color: #fff;
          color: #486cdc;
          width: 220rpx;
        }
        &.submit {
          flex: 1;
          background: #486cdc;
          color: #fff;
        }
      }
    }
  }
}
</style>
